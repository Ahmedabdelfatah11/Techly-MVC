// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Techly.DAL.Context;

#nullable disable

namespace Techly.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250910015248_AddProductTableAndSeedData")]
    partial class AddProductTableAndSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Techly.DAL.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Mobile Accessories"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Power & Charging"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Headphones & Audio"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Smart Gadgets"
                        });
                });

            modelBuilder.Entity("Techly.DAL.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Dell",
                            CategoryId = 1,
                            Description = "13-inch laptop with InfinityEdge display",
                            ListPrice = 25000.0,
                            Price = 24000.0,
                            Price100 = 22000.0,
                            Price50 = 23000.0,
                            SKU = "LAP-001",
                            Title = "Dell XPS 13"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Apple",
                            CategoryId = 2,
                            Description = "Apple smartphone with A16 Bionic chip",
                            ListPrice = 35000.0,
                            Price = 34000.0,
                            Price100 = 32000.0,
                            Price50 = 33000.0,
                            SKU = "PHN-001",
                            Title = "iPhone 14 Pro"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Anker",
                            CategoryId = 3,
                            Description = "Fast charging portable power bank",
                            ListPrice = 1500.0,
                            Price = 1400.0,
                            Price100 = 1200.0,
                            Price50 = 1300.0,
                            SKU = "ACC-001",
                            Title = "Anker Power Bank 20000mAh"
                        });
                });

            modelBuilder.Entity("Techly.DAL.Models.Product", b =>
                {
                    b.HasOne("Techly.DAL.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
